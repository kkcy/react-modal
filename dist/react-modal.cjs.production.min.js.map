{"version":3,"file":"react-modal.cjs.production.min.js","sources":["../src/ModalContext.ts","../src/Backdrop.tsx","../src/AnimatedModalStack.tsx","../src/Modal.tsx","../src/ModalContent.tsx","../src/ModalFooter.tsx","../src/ModalTitle.tsx","../src/theme.ts"],"sourcesContent":["import React, { useContext } from 'react'\n\nexport interface ModalContextValue {\n  allowClose: boolean\n  skipAnimations?: boolean\n  isFullScreen?: boolean\n  onClose?: () => any\n}\n\nexport const ModalContext = React.createContext<ModalContextValue>({} as any)\n\nexport function useModal() {\n  return useContext(ModalContext)\n}\n","import React from 'react'\nimport { Box, BoxProps } from 'theme-ui'\nimport { motion, MotionProps } from 'framer-motion'\nimport { useModal } from './ModalContext'\n\nconst MotionBox = motion(Box)\n\nexport default function Backdrop(props: BoxProps & MotionProps) {\n  const { skipAnimations, isFullScreen } = useModal()\n\n  if (isFullScreen) {\n    return null\n  }\n\n  return (\n    <MotionBox\n      aria-hidden=\"true\"\n      variant=\"modals.backdrop\"\n      custom={{ skip: skipAnimations }}\n      variants={{\n        enter: {\n          opacity: 1,\n          transition: {\n            duration: 0.2,\n          },\n        },\n        exit: ({ skip } = {}) => {\n          if (skip) {\n            return {\n              transition: {\n                duration: 0.2,\n              },\n            }\n          }\n          return {\n            opacity: 0,\n            transition: {\n              duration: 0.2,\n            },\n          }\n        },\n      }}\n      animate=\"enter\"\n      initial={skipAnimations ? false : 'exit'}\n      exit=\"exit\"\n      {...(props as any)}\n    />\n  )\n}\n","import {\n  ModalStack,\n  ModalStackProps,\n  ModalStackValue,\n} from '@mattjennings/react-modal-stack'\nimport { AnimatePresence } from 'framer-motion'\nimport React, { useEffect, useState } from 'react'\nimport Backdrop from './Backdrop'\n\nexport default function AnimatedModalStack(props: ModalStackProps) {\n  return <ModalStack renderModals={AnimatedModals} {...props} />\n}\n\nfunction AnimatedModals({ stack, closeModal }: ModalStackValue) {\n  // Lags slightly behind the `stack` so that we can animate the dismissal of modals\n  const [displayedStack, setDisplayedStack] = useState(stack)\n  const [skipAnimations, setSkipAnimations] = useState(false)\n  const [isOpen, setOpen] = useState(false)\n\n  useEffect(() => {\n    // if we're opening the first modal\n    if (stack.length === 1 && displayedStack.length === 0) {\n      setOpen(true)\n      setDisplayedStack(stack)\n    } else {\n      // else we are adding or dismissing a modal\n\n      // if either the previous or current modal should skip animations\n      const skipAnimations =\n        stack?.[stack.length - 1]?.props?.skipAnimations ??\n        displayedStack?.[displayedStack.length - 1]?.props?.skipAnimations\n\n      if (skipAnimations) {\n        setDisplayedStack(stack)\n        setOpen(true)\n        setSkipAnimations(true)\n      } else {\n        setSkipAnimations(false)\n        setOpen(false)\n      }\n    }\n  }, [stack])\n\n  // after displayedStack has updated, check whether the current modal should skip animations\n  // (incase we transitioned from an animated modal to a skipped animation modal)\n  useEffect(() => {\n    setSkipAnimations(\n      displayedStack?.[displayedStack.length - 1]?.props?.skipAnimations\n    )\n  }, [displayedStack])\n\n  return (\n    <>\n      <AnimatePresence>{stack.length > 0 && <Backdrop />}</AnimatePresence>\n      {displayedStack.map((modal, index) => {\n        const open = index === displayedStack.length - 1 && isOpen\n\n        return (\n          <modal.component\n            key={index}\n            open={open}\n            Backdrop={null}\n            onClose={closeModal}\n            onAnimationComplete={() => {\n              // set open state for next modal\n              if (stack.length > 0) {\n                setOpen(true)\n              } else {\n                setOpen(false)\n              }\n\n              // update displayed stack\n              // setTimeout is a hack to prevent a warning about updating state\n              // in an unmounted component (I can't figure out why it happens, or why this fixes it)\n              setTimeout(() => setDisplayedStack(stack))\n\n              modal.props?.onAnimationComplete?.()\n            }}\n            skipAnimations={skipAnimations}\n            {...modal.props}\n          />\n        )\n      })}\n    </>\n  )\n}\n","import { useModals } from '@mattjennings/react-modal-stack'\n// @ts-ignore\nimport { useResponsiveValue } from '@theme-ui/match-media'\nimport { AnimatePresence, motion, Variant } from 'framer-motion'\nimport { ModalContextValue, ModalContext } from './ModalContext'\nimport React, { useMemo } from 'react'\n// @ts-ignore\nimport { TouchScrollable } from 'react-scrolllock'\nimport { Box, BoxProps } from 'theme-ui'\nimport Backdrop from './Backdrop'\n\nexport interface ModalProps extends Omit<BoxProps, 'children'> {\n  open?: boolean\n\n  /**\n   * Allow user to close modal\n   */\n  allowClose?: boolean\n\n  /**\n   * Closes modal when user clicks outside of the modal\n   */\n  closeOnOutsideClick?: boolean\n\n  onClose?: () => any\n\n  /**\n   * Width of the modal when not full screen\n   */\n  width?: string | number\n\n  /**\n   * Max width of the modal when not full screen\n   */\n  maxWidth?: string | number\n\n  /**\n   * At which breakpoint (and below) it should be fullscreen.\n   *\n   * Alternatively, true for always and false for never\n   */\n  fullScreen?: boolean | 'xs' | 'sm' | 'md' | 'lg'\n\n  /**\n   * Skips the enter and exit animations\n   */\n  skipAnimations?: boolean\n\n  /**\n   * The component to use as the backdrop behind the modals\n   */\n  Backdrop?: React.ComponentType<any>\n\n  children?: React.ReactNode | ((props: ModalContextValue) => React.ReactNode)\n\n  /**\n   * The framer-motion animation variants to use\n   */\n  animations?: {\n    fullScreen?: {\n      enter: Variant\n      exit: Variant\n    }\n    default?: {\n      enter: Variant\n      exit: Variant\n    }\n  }\n}\n\nconst MotionBox = motion(Box)\n\nexport default function Modal({\n  allowClose = true,\n  closeOnOutsideClick = true,\n  Backdrop: BackdropComponent = Backdrop,\n  children,\n  fullScreen = `xs`,\n  maxWidth,\n  onClose,\n  open,\n  skipAnimations = false,\n  sx,\n  variant = 'default',\n  width = `auto`,\n  animations,\n  ...props\n}: ModalProps) {\n  const { closeModal } = useModals()\n\n  const modalAnimations = useMemo(() => enhanceAnimations(animations), [\n    animations,\n  ])\n  const isFullScreen = useResponsiveValue(getBreakpoints(fullScreen))\n  const animation = useResponsiveValue([\n    isFullScreen ? modalAnimations.fullScreen : modalAnimations.default,\n    isFullScreen ? modalAnimations.fullScreen : modalAnimations.default,\n    modalAnimations.default,\n  ])\n\n  function handleClose() {\n    if (onClose) {\n      onClose()\n    } else if (closeModal) {\n      closeModal()\n    }\n  }\n\n  const contextValue = useMemo<ModalContextValue>(\n    () => ({\n      allowClose,\n      onClose,\n      skipAnimations,\n      isFullScreen,\n    }),\n    [allowClose, onClose, skipAnimations, isFullScreen]\n  )\n\n  return (\n    <ModalContext.Provider value={contextValue}>\n      <AnimatePresence custom={{ skip: skipAnimations }}>\n        {open && (\n          <TouchScrollable>\n            <Box\n              sx={{\n                zIndex: `modal`,\n                position: `fixed`,\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                display: `flex`,\n                justifyContent: `center`,\n              }}\n              onClick={closeOnOutsideClick ? handleClose : undefined}\n            >\n              {BackdropComponent && <BackdropComponent />}\n              <MotionBox\n                aria-modal=\"true\"\n                variants={animation}\n                animate=\"enter\"\n                exit=\"exit\"\n                initial={skipAnimations ? false : 'exit'}\n                variant={\n                  isFullScreen\n                    ? `modals.${variant}FullScreen`\n                    : `modals.${variant}`\n                }\n                sx={{\n                  width: isFullScreen ? null : width,\n                  maxWidth: isFullScreen ? null : maxWidth,\n                  ...(sx ?? {}),\n                }}\n                onClick={(ev: Event) => ev.stopPropagation()}\n                {...(props as any)}\n              >\n                {typeof children === `function`\n                  ? children(contextValue)\n                  : children}\n              </MotionBox>\n            </Box>\n          </TouchScrollable>\n        )}\n      </AnimatePresence>\n    </ModalContext.Provider>\n  )\n}\n\nfunction enhanceAnimations(animations: ModalProps['animations']) {\n  const defaultAnimations: Record<string, Record<string, Variant>> = {\n    default: {\n      enter: {\n        opacity: 1,\n        scale: 1,\n        transition: {\n          duration: 0.2,\n          ease: `easeInOut`,\n        },\n      },\n      exit: {\n        opacity: 0,\n        scale: 0.75,\n        transition: {\n          duration: 0.2,\n          ease: `easeInOut`,\n        },\n      },\n    },\n    fullScreen: {\n      enter: {\n        opacity: 1,\n        y: 0,\n        transition: {\n          ease: `easeInOut`,\n        },\n      },\n      exit: {\n        opacity: 0,\n        y: `100vh`,\n        transition: {\n          ease: `easeInOut`,\n        },\n      },\n    },\n  }\n\n  return {\n    fullScreen: animations?.fullScreen\n      ? {\n          enter: animations.fullScreen.enter,\n          exit: (custom: { skip?: boolean } = {}) => {\n            if (custom.skip) {\n              return {\n                transition: {\n                  duration: 0,\n                },\n              }\n            }\n\n            return typeof animations?.fullScreen?.exit === 'function'\n              ? //@ts-ignore\n                animations.fullScreen?.exit(custom)\n              : animations.fullScreen?.exit\n          },\n        }\n      : defaultAnimations.fullScreen,\n    default: animations?.default\n      ? {\n          enter: animations.default.enter,\n          exit: (custom: { skip?: boolean } = {}) => {\n            if (custom.skip) {\n              return {\n                transition: {\n                  duration: 0,\n                },\n              }\n            }\n\n            return typeof animations?.default?.exit === 'function'\n              ? //@ts-ignore\n                animations.default?.exit(custom)\n              : animations.default?.exit\n          },\n        }\n      : defaultAnimations.default,\n  }\n}\n\nfunction getBreakpoints(value: boolean | 'xs' | 'sm' | 'md' | 'lg') {\n  switch (value) {\n    case true:\n      return [true, true, true, true, true, true]\n    case false:\n      return [false, false, false, false, false]\n    case `xs`:\n      return [true, false, false, false, false]\n    case `sm`:\n      return [true, true, false, false, false]\n    case `md`:\n      return [true, true, true, false, false]\n    case `lg`:\n      return [true, true, true, true, false]\n  }\n}\n","import React from 'react'\nimport { Box, BoxProps } from 'theme-ui'\n\nconst ModalContent = React.forwardRef<HTMLDivElement, BoxProps>(\n  function ModalContent(props, ref) {\n    return <Box variant=\"modals.content\" {...props} ref={ref} />\n  }\n)\n\nexport default ModalContent\n","import React from 'react'\nimport { Box, BoxProps } from 'theme-ui'\n\nconst ModalFooter = React.forwardRef<HTMLDivElement, BoxProps>(\n  function ModalFooter(props, ref) {\n    return <Box variant=\"modals.footer\" {...props} ref={ref} />\n  }\n)\n\nexport default ModalFooter\n","import React from 'react'\nimport { Box, BoxProps, Close } from 'theme-ui'\nimport { useModal } from './ModalContext'\n\nexport interface ModalTitleProps extends BoxProps {\n  CloseButton?: React.ComponentType<{ onClick: () => any }>\n}\n\nconst ModalTitle = React.forwardRef<HTMLDivElement, ModalTitleProps>(\n  function ModalTitle({ children, CloseButton, ...props }, ref) {\n    const { allowClose, onClose } = useModal()\n\n    return (\n      <Box variant=\"modals.title\" {...props} ref={ref}>\n        {children}\n        {allowClose &&\n          (CloseButton ? (\n            <CloseButton onClick={onClose as any} />\n          ) : (\n            <Close\n              sx={{\n                height: 6,\n                width: 6,\n                '&:hover': {\n                  cursor: 'pointer',\n                },\n              }}\n              onClick={onClose}\n            />\n          ))}\n      </Box>\n    )\n  }\n)\n\nexport default ModalTitle\n","import { Theme } from 'theme-ui'\n\nexport const modalTheme = {\n  modals: {\n    // Modal components\n    backdrop: {\n      zIndex: `backdrop`,\n      position: `fixed`,\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      background: `rgba(0,0,0,0.3)`,\n    },\n    content: {\n      px: '1rem',\n      flexGrow: 1,\n      overflowY: 'scroll',\n    },\n    footer: {\n      minHeight: 16,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      px: '1rem',\n    },\n    title: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      minHeight: 16,\n      px: '1rem',\n    },\n\n    // Modal variants\n    default: {\n      backgroundColor: 'background',\n      borderRadius: 'lg',\n      boxShadow: `md`,\n      display: `flex`,\n      flexDirection: `column`,\n      maxHeight: `80vh`,\n      minHeight: '16rem',\n      minWidth: '16rem',\n      maxWidth: 'min(90vw, 64rem)',\n      position: `absolute`,\n      top: [`25%`, `10%`, `10%`],\n      zIndex: `modal`,\n    },\n    defaultFullScreen: {\n      backgroundColor: 'background',\n      borderRadius: 0,\n      display: `flex`,\n      flexDirection: `column`,\n      minHeight: '100vh',\n      maxHeight: '100vh',\n      height: `fill-available`,\n      position: `absolute`,\n      top: 0,\n      width: `100vw`,\n      zIndex: `modal`,\n    },\n  },\n  zIndices: {\n    backdrop: 100,\n    modal: 110,\n  },\n}\n\nexport function withModalTheme<T extends Theme>(theme: T) {\n  return {\n    ...theme,\n    modals: { ...modalTheme.modals, ...((theme as any)?.modals ?? {}) },\n    zIndices: {\n      ...modalTheme.zIndices,\n      ...(theme?.zIndices ?? []),\n    },\n  }\n}\n"],"names":["ModalContext","React","createContext","useModal","useContext","MotionBox","motion","Box","Backdrop","props","skipAnimations","isFullScreen","variant","custom","skip","variants","enter","opacity","transition","duration","exit","animate","initial","AnimatedModals","stack","closeModal","useState","displayedStack","setDisplayedStack","setSkipAnimations","isOpen","setOpen","useEffect","length","_stack","_stack$props","_displayedStack","_displayedStack$props","_displayedStack2","_displayedStack2$prop","AnimatePresence","map","modal","index","component","key","open","onClose","onAnimationComplete","setTimeout","ModalContent","forwardRef","ref","ModalFooter","ModalTitle","children","CloseButton","allowClose","onClick","Close","sx","height","width","cursor","modalTheme","modals","backdrop","zIndex","position","top","left","right","bottom","background","content","px","flexGrow","overflowY","footer","minHeight","display","alignItems","justifyContent","title","backgroundColor","borderRadius","boxShadow","flexDirection","maxHeight","minWidth","maxWidth","defaultFullScreen","zIndices","ModalStack","renderModals","closeOnOutsideClick","BackdropComponent","fullScreen","animations","useModals","modalAnimations","useMemo","defaultAnimations","scale","ease","y","_animations$fullScree","_animations$fullScree2","_animations$fullScree3","_animations$default","_animations$default2","_animations$default3","enhanceAnimations","useResponsiveValue","value","getBreakpoints","animation","contextValue","Provider","TouchScrollable","undefined","ev","stopPropagation","theme"],"mappings":"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"}